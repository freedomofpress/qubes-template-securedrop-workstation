#!/bin/bash
# Wrapper script to manage the TemplateVM build process.
# Clones the qubes-builder repo, as well as the securedrop-workstation repo,
# and generates an RPM that can be installed in dom0 to support new TemplateVMs.
set -e
set -u
set -o pipefail

repo_root="$(git rev-parse --show-toplevel)"
build_dir="${repo_root}"
qubes_builder_dir="${build_dir}/qubes-builder"
gpg_homedir="${repo_root}/qubes-builder/keyrings/git"

# Chroot may exist due to previous failed build; let's clean up responsibly.
if [[ -d "${qubes_builder_dir}" ]]
then
    # Command exits 0 even if no chroot exists.
    make -C "${qubes_builder_dir}" clean-chroot
fi

# Heavy-handed, but ensures build is clean, and also sidesteps idempotence
# issues with the git clone/checkout commands.
rm -rf "${qubes_builder_dir}"

# Make sure to add the corresponding pubkey for the signed tag to the gpg import tasks below.
git clone https://github.com/qubesos/qubes-builder "${build_dir}/qubes-builder"

cd "${qubes_builder_dir}"

# Provision securedrop-workstation config so that we get the correct sources via `make get-sources`.
cp ${repo_root}/securedrop-workstation.conf builder.conf

# Get sources for only the builder component, which will get Qubes dev keys and initialize the keyring
make COMPONENTS="builder" get-sources

# Add signing key to the keyring. The pubkey fingerprint tracked here is the "FPF Authority Key".
# In order to test PRs, you may want to use a personal key with a temporary signed tag.
# See comments above regarding feature branches in the git clone operation.
release_key_fingerprint="22245C81E3BAEB4138B36061310F561200F4AD77"
gpg --homedir ${gpg_homedir} --keyserver keys.openpgp.org --recv-key "$release_key_fingerprint"
echo "${release_key_fingerprint}:6:" | gpg --homedir ${gpg_homedir} --import-ownertrust

# Get all sources
make get-sources

# Install dependencies from Qubes builder logic.
make install-deps

# Build it!
make qubes-vm
make template

# Report location of RPM package
rpm_location="$(sudo find -type f -name 'qubes-template-securedrop-workstation*.rpm')"
echo "Build finished. RPM package available at:"
echo "$rpm_location"
